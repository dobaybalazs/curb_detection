#!/usr/bin/env python
PACKAGE = "curb_test"

from dynamic_reconfigure.parameter_generator_catkin import *

gen=ParameterGenerator()
gen.add('input_cloud',str_t,0,"input_cloud","/left_os1/os1_cloud_node/points")
gen.add('max_x',double_t,0,"Max_x",100,-100.0,100)
gen.add('min_x',double_t,0,"Min_x",-4.0,-100,100)
gen.add('max_y',double_t,0,"Max_y",12.0,-50,50)
gen.add('min_y',double_t,0,"Min_y",-12.0,-50,50)
gen.add('max_z',double_t,0,"Max_z",-0.8,-10,10)
gen.add('min_z',double_t,0,"Min_z",-1.8,-10,10)
gen.add('isUnion',bool_t,0,"Result union or intersection",False)
gen.add('filterIntensity',bool_t,0,"Use intensity condition",False)
gen.add('max_intensity',int_t,0,"Intensity threshold max",1000,0,1000)
gen.add('min_intensity',int_t,0,"Intensity threshold min",0,0,1000)
gen.add('max_intensity_diff',int_t,0,"Intensity threshold min",100,0,1000)
gen.add('min_intensity_diff',int_t,0,"Intensity threshold min",0,0,1000)
gen.add('filterZ',bool_t,0,"Use z condition",False)
gen.add('z_max',double_t,0,"Z difference threshold max",0.1,0.0,1.0)
gen.add('z_min',double_t,0,"Z difference threshold min",0.04,0.0,1.0)
gen.add('filterDist',bool_t,0,"Use distance condition",False)
gen.add('distance_max',double_t,0,"distance difference threshold max",0.5,0.0,1.0)
gen.add('distance_min',double_t,0,"distance difference threshold max",0.23,0.0,1.0)
gen.add('filterAngle',bool_t,0,"Use angle condition",False)
gen.add('angle_max',double_t,0,"distance difference threshold max",14.0,-180.0,180.0)
gen.add('angle_min',double_t,0,"distance difference threshold max",-120.0,-180.0,180.0)
gen.add('ransac_cloud',bool_t,0,"Should RANSac be used",False)
gen.add('rdistance_thres',double_t,0,"RANSac distance threshold",0.2,0.0,1.0)
gen.add('rradius_min',double_t,0,"RANSac radius min threshold",0.00,0.0,1.0)
gen.add('rradius_max',double_t,0,"RANSac radius max threshold",0.01,0.0,1.0)

exit(gen.generate(PACKAGE, "curb_test", "curb_detection"))
